FROM archlinux:latest

RUN pacman --noconfirm -Sy git make gcc diffutils meson ninja coreutils libcap shadow rustup python-pip graphviz
RUN pip install gcovr==6.0

# Build AFLNet
RUN git clone https://github.com/aflnet/aflnet.git
RUN cd aflnet && \
    make aflnet-replay

# Build AFLplusplus
RUN git clone https://github.com/z2-2z/dragonfly
RUN cd dragonfly && \
    git submodule update --init \
        AFLplusplus \
        evaluation/proftpd

WORKDIR dragonfly/AFLplusplus
RUN NO_PYTHON=1 NO_NYX=1 make source-only && test -f afl-gcc

# Build ProFTPD
WORKDIR ../evaluation/proftpd
RUN git apply ../aflnet/patch && \
    git apply ../aflnet/patch-cov
RUN CC="$(realpath ../../AFLplusplus/afl-gcc)" \
    CFLAGS="-O0 -g --coverage" \
    LDFLAGS="--coverage" \
    ./configure --disable-shadow --disable-auth-pam --disable-cap && \
    rm -fv *.gcno && \
    make
RUN chmod -R 777 . && setcap cap_sys_chroot+ep ./proftpd

# Setup FTP root
RUN mkdir -p /tmp/ftproot/uploads
RUN echo content > /tmp/ftproot/file

# Configure ProFTPD
WORKDIR ../aflnet
RUN useradd -M -r user && \
    passwd -d user
RUN USER=user ../gen-config.sh > fuzz.conf

# Autostart coverage collection
VOLUME ["/output"]
RUN echo 'set -e; ../proftpd/proftpd -d 0 -q -c /dragonfly/evaluation/aflnet/fuzz.conf -n & sleep 2; find /output/replayable-queue -type f | xargs -L 1 -I +++ /aflnet/aflnet-replay +++ FTP 2121; cd ../proftpd; mkdir -p /output/report; gcovr --output /output/report/index.html --html-nested --html-title AFLNet;' > /coverage.sh
RUN echo 'set -e; chmod -R 777 /output; su user /coverage.sh' > /entrypoint.sh
ENTRYPOINT ["/bin/bash", "/entrypoint.sh"]
