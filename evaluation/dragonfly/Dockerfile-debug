FROM archlinux:latest

RUN pacman --noconfirm -Sy git make clang llvm lld diffutils meson ninja coreutils libcap shadow rustup gdb strace sudo

RUN git clone https://github.com/z2-2z/dragonfly
RUN cd dragonfly && \
    git submodule update --init \
        AFLplusplus \
        libdragonfly \
        evaluation/proftpd

# Build AFL++
WORKDIR dragonfly/AFLplusplus
RUN NO_PYTHON=1 NO_NYX=1 make source-only && test -f afl-clang-lto

# Build libdragonfly
WORKDIR ../libdragonfly
RUN meson setup ./build && \
    cd build && \
    meson configure -D desock_client=true \
        -D desock_server=true \
        -D max_conns=2 \
        -D desyscall_alarm=true \
        -D desyscall_rand=true \
        -D desyscall_random=true \
        -D desyscall_resolve=true \
        -D desyscall_signals=true \
        -D desyscall_sigprocmask=true \
        -D desyscall_symbol_version=GLIBC_2.2.5 \
        -D debug=true \
        -D optimization=0 && \
    meson compile

# Build ProFTPD
WORKDIR ../evaluation/proftpd
RUN git apply ../dragonfly/patch && \
    git apply ../dragonfly/patch-dbg
RUN export LIBDRAGONFLY="$(realpath ../../libdragonfly/build)" && \
    CC="$(realpath ../../AFLplusplus/afl-clang-lto)" \
    CFLAGS="-I$LIBDRAGONFLY/include -O0 -ggdb" \
    LDFLAGS="-L$LIBDRAGONFLY -ldragonfly -Wl,-rpath=$LIBDRAGONFLY" \
    ./configure --disable-shadow --disable-auth-pam --disable-cap && \
    export AFL_CC_COMPILER=LTO && \
    make

# Setup FTP root
RUN mkdir -p /uploads
RUN echo content > /file

# Build the fuzzer
WORKDIR ../dragonfly/fuzzer
RUN rustup default nightly
RUN cargo build
ENV RUST_BACKTRACE=full

# Configure ProFTPD
WORKDIR ..
RUN useradd -m -r user && \
    passwd -d user && \
    groupadd -f -r sudo && \
    usermod -aG sudo user
RUN USER=user ../gen-config.sh > fuzz.conf
RUN echo >> /etc/sudoers && \
    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && \
    echo 'Defaults closefrom_override' >> /etc/sudoers

# Setup GEF
RUN curl -L -o /gef.py https://gef.blah.cat/py && \
    echo "source /gef.py" | tee -a /home/user/.gdbinit /root/.gdbinit

# The debugger has to be launched manually
VOLUME ["/output"]
ENTRYPOINT ["/bin/bash -i"]
